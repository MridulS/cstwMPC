(* EstimateMoffittGottschalkProcess.m *)
(* This file estimates income parameter values under the Moffitt/Gottschalk income process (RW+ARMA), using income draws generated by the perm/tran income process in the paper. *)

SetDirectory[NotebookDirectory[]];
If[Directory[] != NoAggShockDir, SetDirectory[NoAggShockDir]]; (* If this file is run in DoAll file and current folder is "Mathematica", current folder is changed to "NoAggShock". *)
(*
ClearAll["Global`*"];
*)

(* Messege off *)
Off[General::"spell1"]; 
Off[Permutations::"obslt"];
Off[General::"obspkg"];
Off[InterpolatingFunction::"dmval"];
Off[NIntegrate::"ncvb"];
Off[FindMinimum::"lstol"];
Off[FindMinimum::"fmdig"];
Off[FindMinimum::"eit"];

TimeS = SessionTime[];   

<<Params.m;
<<SetupSolve.m; 

Print["============================================================="];
Print["Estimate income variances of the standard income process, using income draws generated by the Moffitt/Gottschalk income process (RW+ARMA)."];

(* Params from third column of Table 4 in Moffitt and Gottschalk (2011) *)
\[Sigma]PsiMoff       =  (0.159/100)^0.5;
\[Sigma]vMoff         =  0.169^0.5;
a1                    =  0.622;
m1                    = -0.344; 
numofpoints           = 10; 
IntervalUsedToCalcVar = 5; (* distance to calculate variance(s) *)

{PsiVecMoff,  PsiVecProbMoff}  = DiscreteApproxToMeanOneLogNormal[\[Sigma]PsiMoff, numofpoints];
{expvVecMoff, expvVecProbMoff} = DiscreteApproxToMeanOneLogNormal[\[Sigma]vMoff,   numofpoints]; (* expv refers to exp(v) *)

YearsToSimulate = 500000;
YMoffList       = Table[1, {YearsToSimulate}];
PMoffList       = Table[1, {YearsToSimulate}];
expvt           = 1; 

(* Calc income list *)
For[periodt=2,
periodt<=YearsToSimulate,

PMoffList[[periodt]] = PMoffList[[periodt-1]] PsiVecMoff[[RandomInteger[{1, numofpoints}]]];
expvtm1              = expvt;
expvt                = expvVecMoff[[RandomInteger[{1, numofpoints}]]];
YMoffList[[periodt]] = (PMoffList[[periodt]]^(a1))  expvt (expvtm1^(m1));

periodt++
]; 

LogYMoffList = Log[YMoffList]; (* Not removing very low obs of Y are not excluded becasue they are negligible or never occur. *)

Diffn        = Drop[LogYMoffList,{1,IntervalUsedToCalcVar}]     - Drop[LogYMoffList,{-IntervalUsedToCalcVar,-1}]; 
Diffnm1      = Drop[LogYMoffList,{1,(IntervalUsedToCalcVar-1)}] - Drop[LogYMoffList,{-(IntervalUsedToCalcVar-1),-1}];

VARn    = Variance[Diffn]; 
VARnm1  = Variance[Diffnm1]; 
VarPerm = VARn- VARnm1;
VarTran = (VARn - IntervalUsedToCalcVar*VarPerm)/2; 

VarPerm = Round[1000 VarPerm]/1000//N;
VarTran = Round[1000 VarTran]/1000//N;

Print[" Variances of perm shocks and trans shocks: ", {VarPerm, VarTran}];



Print["============================================================="];
Print["Estimate the Moffitt/Gottschalk income process (RW+ARMA), using income draws from the the standard perm/tran process."];



(* Params *)
YearsToSimulate    = 3;
QuartersToSimulate = 4 YearsToSimulate; 
NumOfObsToSimulate = 500000; 


(* Income lists *)
PList    = Table[1, {QuartersToSimulate}, {NumOfObsToSimulate}];

For[periodt = 2, (* if we start at 5, that means that perm inc (level) is left at 1 during the first 4 quarters *)
periodt<=QuartersToSimulate, 
PsiList   = RandomPermutation[Flatten[Table[PsiVec, {NumOfObsToSimulate/Length[PsiVec]}]]];
PList[[periodt]] = PList[[periodt-1]] PsiList
;
periodt++
]

ThetaList = 
 Table[RandomPermutation[
   Join[Table[ThetaVec[[1]], {Round[p NumOfObsToSimulate]}], 
    Flatten[Table[
      Drop[ThetaVec, 
       1], {(1-p) NumOfObsToSimulate/(Length[ThetaVec] - 
          1)}]]]], {QuartersToSimulate}];

WageList  = PList ThetaList;

(* Convert to annual income *)
WageList = Table[Total[Take[WageList, {(i - 1)*4 + 1, (i - 1)*4 + 4}]]/4, {i, 
   YearsToSimulate}];

(* Calc covarinaces*)
LogWageList = Log[WageList];
V11 = Variance[LogWageList[[1]]];
V12 = Covariance[LogWageList[[1]],LogWageList[[2]]];
V13 = Covariance[LogWageList[[1]],LogWageList[[3]]];
V22 = Variance[LogWageList[[2]]];
V23 = Covariance[LogWageList[[2]],LogWageList[[3]]];
V33 = Variance[LogWageList[[3]]];

(* Estimation. Following equations on page 25 of Moffitt and Gottschalk (2011) *)
ObjectFunction[sigmaPermLev1hat_?NumberQ, sigmaTranLev1hat_?NumberQ, sigmaPermShockhat_?NumberQ, sigmavhat_?NumberQ, ar1Coeffhat_?NumberQ, ma1Coeffhat_?NumberQ] := (sigmaPermLev1hat^2 + sigmaTranLev1hat^2 - V11)^2 + 
     (sigmaPermLev1hat^2 + ar1Coeffhat sigmaTranLev1hat^2 + ma1Coeffhat sigmavhat^2 - V12)^2 + 
     (sigmaPermLev1hat^2 + ar1Coeffhat (ar1Coeffhat sigmaTranLev1hat^2 + ma1Coeffhat sigmavhat^2) - V13)^2 + 
     (sigmaPermLev1hat^2 + sigmaPermShockhat^2 + ar1Coeffhat^2 sigmaTranLev1hat^2 + (1 + ma1Coeffhat^2 + 2 ar1Coeffhat ma1Coeffhat) sigmavhat^2 - V22)^2 + 
     (sigmaPermLev1hat^2 + sigmaPermShockhat^2 + ar1Coeffhat (ar1Coeffhat^2 sigmaTranLev1hat^2 + (1 + ma1Coeffhat^2 + 2 ar1Coeffhat ma1Coeffhat) sigmavhat^2) + ma1Coeffhat sigmavhat^2 - V23)^2 + 
     (sigmaPermLev1hat^2 + 2 sigmaPermShockhat^2 + ar1Coeffhat^2 (ar1Coeffhat^2 sigmaTranLev1hat^2 + (1 + ma1Coeffhat^2 + 2 ar1Coeffhat ma1Coeffhat) sigmavhat^2) + (1 + ma1Coeffhat^2 + 2 ar1Coeffhat ma1Coeffhat) sigmavhat^2 - V33)^2;


(* No restriction to parameter values. 6 unknowns and 6 moments. *)
Solution = Last[FindMinimum[{ObjectFunction[sigmaPermLev1hat, sigmaTranLev1hat, 
   sigmaPermShockhat, sigmavhat, ar1Coeffhat, ma1Coeffhat], 
   0 <= sigmaPermLev1hat  <= 1 && 
   0 <= sigmaTranLev1hat  <= 1 && 
   0 <= sigmaPermShockhat <= 1 && 
   0 <= sigmavhat         <= 1 && 
   0 <= ar1Coeffhat            <= 1 && 
  -1 <= ma1Coeffhat <= 1}, 
  {sigmaPermLev1hat,  0.2}, 
  {sigmaTranLev1hat,  0.2}, 
  {sigmaPermShockhat, 0.1}, 
  {sigmavhat,         0.1}, 
  {ar1Coeffhat,       0.5}, 
  {ma1Coeffhat,      -0.5}]];

sigmaPermShockSol = sigmaPermShockhat /. Solution;
sigmavSol         = sigmavhat /. Solution;
ar1CoeffSol       = ar1Coeffhat /. Solution;
ma1CoeffSol       = ma1Coeffhat /. Solution;

Print[" \[Sigma]Psi^{2} \[Sigma]v^{2} AR1Coeff MA1CoeffSol"];
Print[" Input value:"]
Print[{\[Sigma]Psi^2*4,  "..." , "..." , "..." }];
Print[" Our estimates: "];
Print[Round[1000 {sigmaPermShockSol^2,  sigmavSol^2, ar1CoeffSol, ma1CoeffSol}]/1000//N];
Print[" Moffitt and Gottschalk (1995): "];
Print[{\[Sigma]PsiMoff^2,  \[Sigma]vMoff^2, a1, m1}];

(*
(* Restrict sigmaPermLev1  = 0, if perminc is set at 0 in year 1. *)
sigmaPermLev1  = 0;
FindMinimum[{ObjectFunction[sigmaPermLev1, sigmaTranLev1hat, 
   sigmaPermShockhat, sigmavhat, ar1Coeffhat, ma1Coeffhat], 
  0 <= sigmaTranLev1hat <= 1 && 0 <= sigmaPermShockhat <= 1 && 
   0 <= sigmavhat <= 1 && 
   0 <= ar1Coeffhat <= 1 && -1 <= ma1Coeffhat <= 1}, {sigmaTranLev1hat, 
  0.2}, {sigmaPermShockhat, 0.1}, {sigmavhat, 0.1}, {ar1Coeffhat, 
  0.5}, {ma1Coeffhat, -0.5}]

(* Restrict sigmaPermLev1  = 0 and sigmaTranLev1  = (V11 - sigmaPermLev1^2)^0.5, if perminc is set at 0 in year 1. *)
sigmaPermLev1  = 0;
sigmaTranLev1  = (V11 - sigmaPermLev1^2)^0.5;
FindMinimum[{ObjectFunction[sigmaPermLev1, sigmaTranLev1, 
   sigmaPermShockhat, sigmavhat, ar1Coeffhat, ma1Coeffhat], 
  0 <= sigmaPermShockhat <= 1 && 0 <= sigmavhat <= 1 && 
   0 <= ar1Coeffhat <= 1 && -1 <= ma1Coeffhat <= 1}, {sigmaPermShockhat, 
  0.1}, {sigmavhat, 0.1}, {ar1Coeffhat, 0.5}, {ma1Coeffhat, -0.5}]
*) 

(* Export results *)
Export[ParentDirectory[] <> "/Results/EstimatesOfMGProcess.txt", Round[1000 {sigmaPermShockSol^2,  sigmavSol^2, ar1CoeffSol, ma1CoeffSol}]/1000//N , "Table"];

(* Display time spent *)  
Print[" Time spent (minutes):  ", (SessionTime[]-TimeS)/60];